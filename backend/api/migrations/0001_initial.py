# Generated by Django 5.2.5 on 2025-08-14 17:21

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True, validators=[django.core.validators.EmailValidator()])),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('address', models.TextField(blank=True)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('state', models.CharField(blank=True, max_length=50)),
                ('country', models.CharField(default='USA', max_length=100)),
                ('postal_code', models.CharField(blank=True, max_length=20)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'People',
                'ordering': ['last_name', 'first_name'],
                'indexes': [models.Index(fields=['email'], name='api_person_email_12ed62_idx'), models.Index(fields=['last_name', 'first_name'], name='api_person_last_na_5fc027_idx')],
            },
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('resource_type', models.CharField(choices=[('DATABASE', 'Database'), ('API', 'API'), ('FILE_STORAGE', 'File Storage'), ('APPLICATION', 'Application'), ('SERVICE', 'Service'), ('NETWORK', 'Network Resource')], max_length=50)),
                ('description', models.TextField(blank=True)),
                ('endpoint_url', models.URLField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'ordering': ['resource_type', 'name'],
                'indexes': [models.Index(fields=['resource_type'], name='api_resourc_resourc_ae1ba0_idx'), models.Index(fields=['name'], name='api_resourc_name_bcf975_idx')],
            },
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=100)),
                ('account_status', models.CharField(choices=[('ACTIVE', 'Active'), ('SUSPENDED', 'Suspended'), ('PENDING', 'Pending Approval'), ('EXPIRED', 'Expired'), ('LOCKED', 'Locked')], default='ACTIVE', max_length=20)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_accessed', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accounts', to='api.person')),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accounts', to='api.resource')),
            ],
            options={
                'ordering': ['person', 'resource', 'username'],
            },
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission_type', models.CharField(choices=[('READ', 'Read'), ('WRITE', 'Write'), ('DELETE', 'Delete'), ('EXECUTE', 'Execute'), ('ADMIN', 'Administrator'), ('OWNER', 'Owner')], max_length=20)),
                ('permission_scope', models.CharField(choices=[('FULL', 'Full Access'), ('LIMITED', 'Limited Access'), ('CONDITIONAL', 'Conditional Access')], default='LIMITED', max_length=20)),
                ('resource_path', models.CharField(blank=True, help_text='Specific path or pattern within the resource', max_length=500)),
                ('granted_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('conditions', models.JSONField(blank=True, default=dict, help_text='JSON conditions for conditional permissions')),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='permissions', to='api.account')),
                ('granted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='permissions_granted', to='api.person')),
            ],
            options={
                'ordering': ['account', 'permission_type'],
                'indexes': [models.Index(fields=['account', 'permission_type'], name='api_permiss_account_b51808_idx'), models.Index(fields=['is_active'], name='api_permiss_is_acti_b1e977_idx')],
                'unique_together': {('account', 'permission_type', 'resource_path')},
            },
        ),
        migrations.AddIndex(
            model_name='account',
            index=models.Index(fields=['person', 'resource'], name='api_account_person__20f4b1_idx'),
        ),
        migrations.AddIndex(
            model_name='account',
            index=models.Index(fields=['account_status'], name='api_account_account_aed3c5_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='account',
            unique_together={('person', 'resource', 'username')},
        ),
    ]
